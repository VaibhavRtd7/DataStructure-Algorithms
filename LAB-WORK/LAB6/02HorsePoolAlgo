#include<iostream>
#include<vector>
#include<string>

using namespace std;

const int MAX_CHAR=256;

void shiftTable(string &pattern , vector<int> &shift) {

   int m=pattern.length();
   for(int i=0; i<MAX_CHAR; i++)  shift[i]=m;

   for(int i=0; i<m-1; i++) {
     shift[pattern[i]] = m-1-i;
   }

    for(int i=0; i<m; i++) {
        cout<< pattern[i] << " " << shift[pattern[i]] << endl;
    } cout<<endl;
}

int horsepoolSearch(string &text, string &pattern) {

    int n = text.length();
    int m=pattern.length();

    if(m>n) {
        return -1;
    }

    vector<int> shift(MAX_CHAR);
    shiftTable(pattern, shift);

    int j=0;
    while(j <= n-m) {

        int i=m-2;
        while(i>=0 and pattern[i]==text[i+j]) {
            i--;     
        }

        if(i==-1) {
            return j;
        }

        j = j + shift[text[j+m-1]];   // Remember
    }


  return -1;
}

int main() {

    string text = "JIM SAW ME IN A BARBER SHOP";
    string pattern = "BARBER";

    int pos = horsepoolSearch(text, pattern);

    if(pos != -1) {
        cout << "Pattern is found at the index no. " << pos << endl;
    }
    else {
        cout << "Pattern is not found in the text" << endl;
    }

    return 0;
}
